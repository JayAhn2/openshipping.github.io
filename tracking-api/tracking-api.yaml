openapi: 3.0.0
info:
  version: "1.0.2"
  title: Openshipping - Get Tracking API
  description: API providing tracking data
  contact:
    name: openshipping.org
tags:
  - name: Consignment
    description: Provides tracking data of consignment. 
  - name: Transport Equipment
    description: Provides tracking data of an equipment during its last commercial cycle.
paths:
  /consignments/{consignmentRef}:
    get:
      tags:
        - Consignment
      parameters:
        - name: consignmentRef
          in: path
          description: Consignment identifier (booking number or bill of lading number).
          required: true
          schema:
            type: string
        - name: eventFilter
          in: query
          description: All events or latest events (latest is default)
          required: false
          schema:
            type: string
      responses: 
        '200':
          description: Returned Consignment
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Consignment'
        '404':
          description: Consignment not found
  /transportEquipment/{equipmentNumber}:
    get:
      tags:
        - Transport Equipment
      parameters:
        - name: equipmentNumber
          in: path
          description: BIC container identifier
          required: true
          schema:
            type: string
        - name: eventFilter
          in: query
          description: All events or latest events (latest is default)
          required: false
          schema:
            type: string
      responses: 
        '200':
          description: Returned TransportEquipment
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/TransportEquipment'
        '404':
          description: TransportEquipment not found
components:
  schemas:
    Consignment:
      type: object
      required:
        - consignmentRef
      properties:
        consignmentRef:
          type: string
          description: The unique identification of the Consignment, issued by the carrier. It is recommended that this is either the carrier booking number or bill of lading number. Please refer to UN/EDIFACT's "BN" and "BL" codes ("BN" defined as Consignment identifier, carrier assigned [1016] Reference number assigned by a carrier of its agent to identify a specific consignment such as a booking reference number when cargo space is reserved prior to loading. (http://www.unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred1153.htm)
        milestoneEvents:
          description: Transport plan of the consignment
          type: array
          items:
            $ref: '#/components/schemas/PlannedMilestoneEvent'
        genericEvents:
          description: Generic events for the Consignment
          type: array
          items:
            $ref: '#/components/schemas/PlannedEvent'
        transportEquipment:
          description: List of the TransportEquipment allocated to this Consignment
          type: array
          items:
            $ref: '#/components/schemas/TransportEquipment'
        
    TransportEquipment:
      type: object
      properties: 
        consignmentRef:
          type: string
          description: Only provided if the requestor is logged in as a valid party to the consignment. Not provided in the Consignment responses, as it is redundant.
        equipmentNumber:
          description: The ISO 6346 goverend number, physically printed on the equipment. This represents UN/EDIFACT's "EQ" code. Number assigned by the manufacturer to specific equipment. (http://www.unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred1153.htm)
          type: string
          example: MRSU3395549
        milestoneEvents:
          description: Estimated events for the Transport Equipment
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/EstimatedMilestoneEvent'
              - $ref: '#/components/schemas/ActualMilestoneEvent'
        smartEvents:
          description: Smart events for the Transport Equipment
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/EstimatedSmartEvent'              
              - $ref: '#/components/schemas/ActualSmartEvent'
        genericEvents:
          description: Generic events for the Transport Equipment
          type: array
          items:
            description: Generic event for the Transport Equipment
            oneOf:
              - $ref: '#/components/schemas/EstimatedEvent'
              - $ref: '#/components/schemas/ActualEvent'

    Event:
      type: object
      required:
        - eventTime
      properties:
        originatorId:
          type: string
          description: SCAC code of the organization that published this event
        eventNature:
          type: string
          description: 'Indicates if the event is ''Planned'', ''Estimated'' or ''Actual'' '
          example: Estimated
        eventTime:
          type: string
          format: date-time
          description: Time of the event occurrance, in ISO 8601 format yyyy-MM-dd'T'hh:mm:ss.sssÂ±hh:mm
          example: '2018-06-22T06:20:30.000-01:00'
        eventCodeType:
          type: string
          description: 'This can link to coded event standards, such as ''EDIFACT'' or ''CEFACT Recommendation 24''.'
          example: 'CEFACT Recommendation 24'
        eventCodeValue:
          type: string
          description: 'The code as per the codification scheme.'
          example: 359
        eventCodeDescription:
          type: string
          description: 'Description as per the codeification scheme.'
          example: 'Bill of Lading issued'

    PlannedEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/Event'
      properties:
        planRef:
          type: string
          description: Common reference used across a set of planned events, in order to associate them to the same plan.

    EstimatedEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/Event'
      properties:
        gpsLocation:
          description: 'GPS coordinates [latitude,longitude]'
          example: 55.702248, 12.600225
          type: array
          items:
            type: number
            minItems: 2
            maxItems: 2
    ActualEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/Event'
      properties:
        gpsLocation:
          description: 'GPS coordinates [latitude,longitude]'
          example: 55.702248, 12.600225
          type: array
          items:
            type: number
            minItems: 2
            maxItems: 2

    PlannedMilestoneEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/PlannedEvent'
        - $ref: '#/components/schemas/MilestoneEventData'

    EstimatedMilestoneEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/EstimatedEvent'
        - $ref: '#/components/schemas/MilestoneEventData'

    ActualMilestoneEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/ActualEvent'
        - $ref: '#/components/schemas/MilestoneEventData'

    MilestoneEventData:
      type: object
      allOf:
        - $ref: '#/components/schemas/TransportMovement'
        - $ref: '#/components/schemas/TransportMeans'
      properties:
        location:
          type: string
          description: The UN/LOCODE where the event occured.
          example: AUSYD
        terminal:
          type: string
          description: SMDG code of the terminal where the event took place. The SMDG code must be denoted with a dash "-" between the UN/LOCODE and the Terminal code. Note that the UN/LOCODE provided as part of the terminal's SMDG code will in most cases be the same provided in the location attribute but can deviate, thus please always provide the full SMDG code
          example: USMOB-APMT
        transportationPhase:
          description: The transportation phase
          type: string
          enum:
            - Import
            - Export
            - Transshipment
          example: Import
        fullStatus:
          type: string
          description: Indication of whether the container is full or empty
          enum:
            - Full
            - Empty
          example: Full

    TransportMeans:
      description: 'The devices used to convey goods or other objects from place to place during logistics cargo movements.'
      type: object
      properties:
        vehicleId:
          type: string
          description: Identification of the means of transport. Use IMO numbers for vessels and barges
          example: 9337262
        vehicleType:
          type: string
          description: 'Vehicle type: Truck, Vessel, Rail, Barge, Air'

    TransportMovement:
      description: 'The conveyance (physical carriage) of goods or other objects used for logistics transport purposes.'
      type: object
      properties:
        transportReference:
          type: integer
          description: A transport reference like Transport Order, Visit number (sequence in the tour for rail transportation), or Voyage number for vessels.

    ActualSmartEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/ActualEvent'
        - $ref: '#/components/schemas/SmartEventData'
      required:
        - gpsLocation
    EstimatedSmartEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/EstimatedEvent'
        - $ref: '#/components/schemas/SmartEventData'
      required:
        - gpsLocation
    SmartEventData:
      type: object
      properties:
        metaData:
          $ref: '#/components/schemas/MetaData'
        eventDetail:
          type: object
          description : 'A smart event can contain detail data. Data providers should agree on a common definition of the details of each smart event. See external link: https://app.swaggerhub.com/apis/API-Factory/Smart_Event_Catalog/0.0.3'
      required:
        - metaData

    MetaData:
      type: object
      description: metadata related to smart events
      properties:
        assetId:
          type: string
          description: 'Container number: 4 letters + 7 digits written on the container, defined by BIC'
        assetType:
          type: string
          description: 'Asset type. For instance, ''DRY'' or ''Refeer'' '
        deviceId:
          type: string
          description: Id of the IOT device used for asset tracking
        generationTimestamp:
          type: string
          format: date-time
          description: Generation timestamp of the event, in ISO 8601 format yyyy-MM-dd'T'hh:mm:ss.sssÂ±hh:mm
        software:
          type: string
          description: Software used for posting event
        softwareVersion:
          type: string
          description: Software version